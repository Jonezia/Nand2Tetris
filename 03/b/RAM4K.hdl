// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM4K.hdl

/**
 * Memory of 4K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM4K {
    IN in[16], load, address[12];
    OUT out[16];

    PARTS:
    // Put your code here:
    DMux8Way(in=load,sel=address[9..11],a=InA,b=InB,c=InC,d=InD,e=InE,f=InF,g=InG,h=InH);
    RAM512(in=in,load=InA,address=address[0..8],out=A);
    RAM512(in=in,load=InB,address=address[0..8],out=B);
    RAM512(in=in,load=InC,address=address[0..8],out=C);
    RAM512(in=in,load=InD,address=address[0..8],out=D);
    RAM512(in=in,load=InE,address=address[0..8],out=E);
    RAM512(in=in,load=InF,address=address[0..8],out=F);
    RAM512(in=in,load=InG,address=address[0..8],out=G);
    RAM512(in=in,load=InH,address=address[0..8],out=H);
    Mux8Way16(a=A,b=B,c=C,d=D,e=E,f=F,g=G,h=H,sel=address[9..11],out=out);
}