// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    // Put your code here:
    DMux8Way(in=load,sel=address,a=InA,b=InB,c=InC,d=InD,e=InE,f=InF,g=InG,h=InH);
    Register(in=in,load=InA,out=A);
    Register(in=in,load=InB,out=B);
    Register(in=in,load=InC,out=C);
    Register(in=in,load=InD,out=D);
    Register(in=in,load=InE,out=E);
    Register(in=in,load=InF,out=F);
    Register(in=in,load=InG,out=G);
    Register(in=in,load=InH,out=H);
    Mux8Way16(a=A,b=B,c=C,d=D,e=E,f=F,g=G,h=H,sel=address,out=out);
}